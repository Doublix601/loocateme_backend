services:
  api:
    build: .
    container_name: loocateme-api
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - NODE_ENV=development
      - CORS_ORIGIN=http://localhost:19006
      - MONGODB_URI=mongodb://appuser:${MONGO_APP_PASSWORD:-change-me-app}@mongo:27017/loocateme?authSource=admin
      - JWT_ACCESS_SECRET=change-me-access
      - JWT_REFRESH_SECRET=change-me-refresh
      - JWT_ACCESS_EXPIRES=15m
      - JWT_REFRESH_EXPIRES=30d
      - REDIS_URL=redis://default:${REDIS_PASSWORD:-change-me-redis}@redis:6379
      - UPLOAD_DIR=uploads
      - BASE_URL=http://localhost:4000
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-change-me-root}
      - MONGO_APP_PASSWORD=${MONGO_APP_PASSWORD:-change-me-app}
    volumes:
      - ./:/app
      - ./data/uploads:/app/uploads
    depends_on:
      - mongo
      - redis
    command: sh -c "if [ -f package-lock.json ]; then npm ci; else npm install; fi && npm run dev"
  mongo:
    image: mongo:6
    container_name: loocateme-mongo
    restart: unless-stopped
    # Do NOT expose Mongo to the Internet. Only the API should access it over the internal Docker network.
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-change-me-root}
      - MONGO_INITDB_DATABASE=loocateme
      - MONGO_APP_PASSWORD=${MONGO_APP_PASSWORD:-change-me-app}
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./scripts/mongo-entrypoint.sh:/docker-entrypoint-initdb.d/mongo-entrypoint.sh:ro
    command: ["bash", "/docker-entrypoint-initdb.d/mongo-entrypoint.sh"]
  redis:
    image: redis:7-alpine
    container_name: loocateme-redis
    restart: unless-stopped
    # Do NOT expose Redis to the Internet
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD:-change-me-redis}"]
    volumes:
      - redis_data:/data

volumes:
  mongo_data:
  redis_data:
